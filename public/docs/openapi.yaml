openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/medical-facilities:
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/medical-facilities/{facility_id}/units':
    post:
      summary: 'Store a newly created unit.'
      operationId: storeANewlyCreatedUnit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: facility_id
        description: 'The ID of the facility.'
        example: suscipit
        required: true
        schema:
          type: string
  '/api/medical-facilities/{id}':
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    get:
      summary: 'Display the specified medical facility.'
      operationId: displayTheSpecifiedMedicalFacility
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Medical facility not found'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Medical facility not found'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the medical facility.'
        example: eos
        required: true
        schema:
          type: string
  '/api/medical-facilities/{facility_id}/units/{id}':
    put:
      summary: 'Update the specified unit.'
      operationId: updateTheSpecifiedUnit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                facility_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the medical_facilities table.'
                  example: null
                  nullable: false
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: euxymhlfftcocxkjawzhjg
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Fugiat ut soluta voluptas enim dolores velit deserunt.'
                  nullable: true
                specialization:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: aqqcgqzvdrqozcekkn
                  nullable: true
                status:
                  type: string
                  description: ''
                  example: active
                  nullable: false
                  enum:
                    - active
                    - inactive
      security: []
    delete:
      summary: 'Remove the specified unit.'
      operationId: removeTheSpecifiedUnit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    get:
      summary: 'Display the specified unit.'
      operationId: displayTheSpecifiedUnit
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: facility_id
        description: 'The ID of the facility.'
        example: ab
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the unit.'
        example: 11
        required: true
        schema:
          type: integer
  /api/medical-facilities/search:
    get:
      summary: 'Search medical facilities with various filters'
      operationId: searchMedicalFacilitiesWithVariousFilters
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/medical-facilities/filter:
    get:
      summary: 'Filter medical facilities based on various criteria'
      operationId: filterMedicalFacilitiesBasedOnVariousCriteria
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/auth/login:
    post:
      summary: ''
      operationId: postApiAuthLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'User Management'
      security: []
  /api/auth/register:
    post:
      summary: ''
      operationId: postApiAuthRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'User Management'
      security: []
  /api/auth/logout:
    post:
      summary: ''
      operationId: postApiAuthLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'User Management'
      security: []
  /api/auth/user:
    get:
      summary: ''
      operationId: getApiAuthUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Management'
      security: []
tags:
  -
    name: Endpoints
    description: ''
  -
    name: 'User Management'
    description: "\nAPIs to manage the user Authentication."
